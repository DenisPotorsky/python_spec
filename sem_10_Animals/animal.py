'''
üìå –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ —Ç—Ä–∏ (–∏–ª–∏ –±–æ–ª–µ–µ) –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä —Ä—ã–±—ã, –ø—Ç–∏—Ü—ã –∏ —Ç.–ø.
üìå –£ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–∞–∫ –æ–±—â–∏–µ —Å–≤–æ–∏ÃÜ—Å—Ç–≤–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä –∏–º—è, —Ç–∞–∫ –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∫–ª–∞—Å—Å–∞.
üìå –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–∏ÃÜ—Ç–µ –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥—è—â–∏–∏ÃÜ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.
   –ó–∞–¥–∞–Ω–∏–µ No6
üìå –î–æ—Ä–∞–±–æ—Ç–∞–∏ÃÜ—Ç–µ –∑–∞–¥–∞—á—É 5.
üìå –í—ã–Ω–µ—Å–∏—Ç–µ –æ–±—â–∏–µ —Å–≤–æ–∏ÃÜ—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–æ–≤ –≤ –∫–ª–∞—Å—Å
    –ñ–∏–≤–æ—Ç–Ω–æ–µ.
üìå –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –Ω–∞—Å–ª–µ–¥—É–∏ÃÜ—Ç–µ –æ—Ç –Ω–µ–≥–æ.
üìå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ –∫–ª–∞—Å—Å—ã –≤–Ω–µ—Å–µ–Ω—ã –ø—Ä–∞–≤–∫–∏.

üìå –ó–∞–¥–∞—á–∞ 1. –†–µ—à–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É—Å–ø–µ–ª–∏ —Ä–µ—à–∏—Ç—å –Ω–∞ —Å–µ–º–∏–Ω–∞—Ä–µ.

üìå–ó–∞–¥–∞—á–∞ 2. –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞–Ω–∏—è 5-6. –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-—Ñ–∞–±—Ä–∏–∫—É.
    - –ö–ª–∞—Å—Å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–∏–ø –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤) –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏–ø–∞.
    - –í–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–π—Ç–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∏ –≤–µ—Ä–Ω–∏—Ç–µ –µ–≥–æ –∏–∑ –∫–ª–∞—Å—Å–∞-—Ñ–∞–±—Ä–∏–∫–∏.

üìå–ó–∞–¥–∞—á–∞ 3. –í–æ–∑—å–º–∏—Ç–µ 1-3 –ª—é–±—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏–∑ –ø—Ä–æ—à–ª—ã—Ö —Å–µ–º–∏–Ω–∞—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö),
    –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —É–∂–µ —Ä–µ—à–∞–ª–∏. –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞, –∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å–≤–æ–π—Å—Ç–≤–∞.
    –ó–∞–¥–∞–Ω–∏—è –¥–æ–ª–∂–Ω—ã —Ä–µ—à–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–æ–≤ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
'''


class Animal:
    def __init__(self, name, age, color):
        self.name = name
        self.age = age
        self.color = color


class Factory:
    def __init__(self, animal_class, **kwargs):
        self.animal = animal_class
        self.params = kwargs

    def make_animal(self):
        params = list(item for item in self.params.values())
        if self.animal == 'Bird' or 'bird':
            return Bird(*params)
        elif self.animal == "Reptiles" or 'reptiles':
            return Reptiles(*params)
        else:
            return Fish(*params)


class Fish(Animal):

    def __init__(self, name, age, color, fins_count):
        super().__init__(name, age, color)
        self.fins_count = fins_count

    def show_special_attributes(self):
        print(self.fins_count)


class Bird(Animal):

    def __init__(self, name, age, color, can_fly=True):
        super().__init__(name, age, color)
        self.flying = can_fly

    def show_special_attributes(self):
        print(f'can fly = {self.flying}')


class Reptiles(Animal):

    def __init__(self, name, age, color, body_size):
        super().__init__(name, age, color)
        self.size = body_size

    def show_special_attributes(self):
        print(f'length of body = {self.size}')


factory = Factory('bird', name='sd', age=9, color='green', d=False)
animal = factory.make_animal()
print(animal.age)
